<UserControl x:Class="Diiagramr.View.Diagram.DiagramView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:diagram1="clr-namespace:Diiagramr.ViewModel.Diagram"
             xmlns:view="clr-namespace:Diiagramr.View"
             xmlns:customControls="clr-namespace:Diiagramr.View.CustomControls"
             mc:Ignorable="d"
             MouseMove="{s:Action MouseMoveHandler}"
             d:DataContext="{d:DesignInstance diagram1:DiagramViewModel}"
             AllowDrop="True"
             DragOver="{s:Action DragOver}"
             DragEnter="{s:Action DragEnter}"
             DragLeave="{s:Action DragLeave}">
    <UserControl.Resources>
        <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type customControls:NodeMoveThumb}">
            <Rectangle>
                <Rectangle.Style>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Fill" Value="Transparent" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.01"
                                                            Storyboard.TargetProperty="Fill.Color"
                                                            To="LightGray" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.6"
                                                            Storyboard.TargetProperty="Fill.Color"
                                                            To="Transparent" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
        </ControlTemplate>
        <BooleanToVisibilityConverter x:Key="Btv" />
    </UserControl.Resources>

    <Grid>
        <customControls:ZoomBorder x:Name="ZoomBorder" PanX="{Binding PanX, Mode=OneWayToSource}"
                       PanY="{Binding PanY, Mode=OneWayToSource}" Zoom="{Binding Zoom, Mode=OneWayToSource}"
                       Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                       MouseLeftButtonDown="{s:Action LeftMouseButtonDownHandler}">
            <Grid>
                <ItemsControl ItemsSource="{Binding NodeViewModels}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}" />
                            <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition MaxWidth="{x:Static view:DiagramConstants.NodeBorderWidth}" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition MaxHeight="{x:Static view:DiagramConstants.NodeBorderWidth}" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                            <Label Content="{Binding Name}" 
                                                   Foreground="LightSlateGray" 
                                                   FontFamily="Verdana" 
                                                   FontSize="2"
                                                   Grid.RowSpan="2" 
                                                   HorizontalContentAlignment="Center" 
                                                   IsHitTestVisible="False"
                                                   RenderTransformOrigin="0.5, 0">
                                                <Label.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="7" ScaleY="7"></ScaleTransform>
                                                        <TranslateTransform X="0" Y="-54"/>
                                                    </TransformGroup>

                                                </Label.RenderTransform>
                                                <Label.Style>
                                                    <Style TargetType="{x:Type Label}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding TitleVisible}" Value="True">
                                                                <DataTrigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ColorAnimation Duration="0:0:0.05"
                                                                    Storyboard.TargetProperty="Foreground.Color"
                                                                    To="#F667" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </DataTrigger.EnterActions>
                                                                <DataTrigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ColorAnimation Duration="0:0:0.25"
                                                                    Storyboard.TargetProperty="Foreground.Color"
                                                                    To="Transparent" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </DataTrigger.ExitActions>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Label.Style>
                                            </Label>

                                            <customControls:NodeMoveThumb Grid.ColumnSpan="2" Grid.Column="0"
                                                              Grid.Row="0" Grid.RowSpan="2"
                                                              Template="{StaticResource MoveThumbTemplate}"
                                                              DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                              Cursor="SizeAll"
                                                              PreviewMouseDown="{s:Action PreviewLeftMouseDownOnBorder}"
                                                              Drop="{s:Action DropEventHandler}"
                                                              DragOver="{s:Action DragOverEventHandler}"
                                                              MouseEnter="{s:Action MouseEntered}"         
                                                              MouseLeave="{s:Action MouseLeft}"         
                                                              AllowDrop="True"/>

                                            <ItemsControl Grid.Row="0" 
                                                          Grid.Column="0"
                                                          Grid.ColumnSpan="2"
                                                          Grid.RowSpan="2"
                                                          ItemsSource="{Binding TerminalViewModels}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <Canvas/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>

                                                <ItemsControl.ItemContainerStyle>
                                                    <Style TargetType="ContentPresenter">
                                                        <Setter Property="Canvas.Left" Value="{Binding XRelativeToNode, Mode=TwoWay}" />
                                                        <Setter Property="Canvas.Top" Value="{Binding YRelativeToNode, Mode=TwoWay}" />
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <ContentControl s:View.Model="{Binding}" IsTabStop="False" />
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ItemsControl.ItemContainerStyle>

                                            </ItemsControl>

                                            <Rectangle Grid.ColumnSpan="2"
                                                       Grid.RowSpan="2"
                                                       Grid.Row="0"
                                                       Grid.Column="0"
                                                       Margin="{x:Static view:DiagramConstants.NodeSelectionBorderThickness}"
                                                       Fill="DodgerBlue"
                                                       Visibility="{Binding Content.IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Btv}}" 
                                                       IsHitTestVisible="False"/>
                                            <ContentControl Grid.ColumnSpan="2"
                                                            Grid.Column="0"
                                                            Grid.Row="0"
                                                            Grid.RowSpan="2"
                                                            s:View.Model="{Binding}"
                                                            Loaded="{s:Action NodeViewLoaded}"
                                                            Margin="{x:Static view:DiagramConstants.NodeBorderThickness}"
                                                            VerticalContentAlignment="Stretch"
                                                            HorizontalContentAlignment="Stretch"
                                                            IsTabStop="False" />
                                            <Button Grid.Row="0"
                                                    Grid.Column="1"
                                                    Content=""
                                                    Background="IndianRed"
                                                    Margin="0"
                                                    Width="{x:Static view:DiagramConstants.NodeBorderWidth}"
                                                    Height="{x:Static view:DiagramConstants.NodeBorderWidth}"
                                                    BorderThickness="0"
                                                    Command="{s:Action RemoveNodePressed}"
                                                    Visibility="{Binding Content.IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Btv}}" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>

                <ItemsControl ItemsSource="{Binding WireViewModels}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentControl s:View.Model="{Binding}" IsTabStop="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Grid>
        </customControls:ZoomBorder>
        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ContentControl s:View.Model="{Binding InsertingNodeViewModel}"
                            Canvas.Top="{Binding InsertingNodeViewModel.Y}"
                            Canvas.Left="{Binding InsertingNodeViewModel.X}" IsHitTestVisible="False">
                <ContentControl.LayoutTransform>
                    <ScaleTransform ScaleX="{Binding Zoom, ElementName=ZoomBorder}"
                                    ScaleY="{Binding Zoom, ElementName=ZoomBorder}" />
                </ContentControl.LayoutTransform>
            </ContentControl>
        </Canvas>
    </Grid>
</UserControl>