<UserControl
    x:Class="Diiagramr.View.Diagram.DiagramView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customControls="clr-namespace:DiiagramrAPI.CustomControls;assembly=DiiagramrAPI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:diagram="clr-namespace:DiiagramrAPI.ViewModel.Diagram;assembly=DiiagramrAPI"
    xmlns:diagram1="clr-namespace:DiiagramrAPI.ViewModel.ProjectScreen.Diagram;assembly=DiiagramrAPI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pluginNodeApi="clr-namespace:DiiagramrAPI.PluginNodeApi;assembly=DiiagramrAPI"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:view="clr-namespace:Diiagramr.View"
    xmlns:viewModel="clr-namespace:DiiagramrAPI.ViewModel;assembly=DiiagramrAPI"
    d:DataContext="{d:DesignInstance diagram1:DiagramViewModel}"
    d:DesignHeight="300"
    d:DesignWidth="600"
    AllowDrop="True"
    DragEnter="{s:Action DragEnter}"
    DragLeave="{s:Action DragLeave}"
    DragOver="{s:Action DragOver}"
    Drop="{s:Action DroppedDiagramCallNode}"
    MouseMove="{s:Action MouseMoveHandler}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="NodeBorderRectangleStyle" TargetType="{x:Type Rectangle}">
            <Setter Property="Fill" Value="Transparent" />
            <Setter Property="RadiusX" Value="0.5" />
            <Setter Property="RadiusY" Value="0.5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetProperty="Fill.Color"
                                    To="LightGray"
                                    Duration="0:0:0.01" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetProperty="Fill.Color"
                                    To="Transparent"
                                    Duration="0:0:0.6" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type customControls:NodeMoveThumb}">
            <Rectangle Style="{StaticResource NodeBorderRectangleStyle}" />
        </ControlTemplate>

        <ItemsPanelTemplate x:Key="CanvasItemsPanelTemplate">
            <Canvas />
        </ItemsPanelTemplate>

        <Style x:Key="WireContainerStyle" TargetType="ContentPresenter">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl s:View.Model="{Binding}" IsTabStop="False" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NodeLabelStyle" TargetType="{x:Type Label}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding TitleVisible}" Value="False">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetProperty="Foreground.Color"
                                    To="Transparent"
                                    Duration="0:0:0.25" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetProperty="Foreground.Color"
                                    To="#F667"
                                    Duration="0:0:0.05" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TerminalContainerStyle" TargetType="ContentPresenter">
            <Setter Property="Canvas.Left" Value="{Binding XRelativeToNode}" />
            <Setter Property="Canvas.Top" Value="{Binding YRelativeToNode}" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl s:View.Model="{Binding}" IsTabStop="False" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DeleteNodeButtonStyle" TargetType="Button">
            <Setter Property="Content" Value="" />
            <Setter Property="Background" Value="IndianRed" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Width" Value="{x:Static viewModel:DiagramConstants.NodeBorderWidth}" />
            <Setter Property="Height" Value="{x:Static viewModel:DiagramConstants.NodeBorderWidth}" />
        </Style>

        <Style x:Key="SelectionStyle" TargetType="Rectangle">
            <Setter Property="Fill" Value="DodgerBlue" />
            <Setter Property="RadiusX" Value="0.5" />
            <Setter Property="RadiusY" Value="0.5" />
            <Setter Property="Margin" Value="{x:Static viewModel:DiagramConstants.NodeSelectionBorderThickness}" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>

        <Style x:Key="NodeBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="White" />
            <Setter Property="CornerRadius" Value="0.5" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Width" Value="{Binding Width, Mode=TwoWay}" />
            <Setter Property="Height" Value="{Binding Height, Mode=TwoWay}" />
            <Setter Property="Margin" Value="{x:Static viewModel:DiagramConstants.NodeBorderThickness}" />
        </Style>

        <VisualBrush
            x:Key="DotFillBrush"
            TileMode="Tile"
            Viewbox="0,0,40,40"
            ViewboxUnits="Absolute"
            Viewport="0,0,40,40"
            ViewportUnits="Absolute">
            <VisualBrush.Visual>
                <Ellipse
                    Width="2"
                    Height="2"
                    Fill="#bbbbbb" />
            </VisualBrush.Visual>
        </VisualBrush>

        <BooleanToVisibilityConverter x:Key="Btv" />
    </UserControl.Resources>

    <Grid>
        <customControls:ZoomBorder
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="White"
            MouseLeftButtonDown="{s:Action LeftMouseButtonDownHandler}"
            PanX="{Binding PanX, Mode=OneWayToSource}"
            PanY="{Binding PanY, Mode=OneWayToSource}"
            PreviewMouseLeftButtonDown="{s:Action PreviewLeftMouseButtonDownHandler}"
            PreviewMouseRightButtonDown="{s:Action PreviewRightMouseButtonDownHandler}"
            Zoom="{Binding Zoom, Mode=OneWayToSource}">
            <Grid>
                <Canvas
                    MinWidth="3002"
                    MinHeight="3002"
                    Margin="-3000"
                    Background="{StaticResource DotFillBrush}"
                    Visibility="{Binding IsSnapGridVisible, Converter={StaticResource Btv}}" />
                <!--  Wire Items Control  -->
                <ItemsControl
                    ItemContainerStyle="{StaticResource WireContainerStyle}"
                    ItemsPanel="{StaticResource CanvasItemsPanelTemplate}"
                    ItemsSource="{Binding WireViewModels}" />
                <!--  Node Items Control  -->
                <ItemsControl ItemsPanel="{StaticResource CanvasItemsPanelTemplate}" ItemsSource="{Binding NodeViewModels}">
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}" />
                            <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type pluginNodeApi:PluginNode}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition MaxWidth="{x:Static viewModel:DiagramConstants.NodeBorderWidth}" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition MaxHeight="{x:Static viewModel:DiagramConstants.NodeBorderWidth}" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                            <Label
                                                Grid.RowSpan="2"
                                                HorizontalContentAlignment="Center"
                                                Content="{Binding Name}"
                                                FontFamily="Verdana"
                                                FontSize="3"
                                                Foreground="LightSlateGray"
                                                IsHitTestVisible="False"
                                                RenderTransformOrigin="0.5, 0"
                                                Style="{StaticResource NodeLabelStyle}">
                                                <Label.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="5" ScaleY="5" />
                                                        <TranslateTransform X="5" Y="-44" />
                                                    </TransformGroup>
                                                </Label.RenderTransform>
                                            </Label>

                                            <customControls:NodeMoveThumb
                                                Grid.Row="0"
                                                Grid.RowSpan="2"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                AllowDrop="True"
                                                Cursor="SizeAll"
                                                DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Drop="{s:Action DropEventHandler}"
                                                MouseEnter="{s:Action MouseEntered}"
                                                MouseLeave="{s:Action MouseLeft}"
                                                PreviewMouseDown="{s:Action PreviewLeftMouseDownOnBorderHandler}"
                                                Template="{StaticResource MoveThumbTemplate}" />

                                            <Border
                                                Grid.Row="0"
                                                Grid.RowSpan="2"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                Width="10"
                                                Height="10"
                                                Margin="0,0,5,5"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Bottom"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                Visibility="{Binding ResizerVisible, Converter={StaticResource Btv}}">
                                                <customControls:NodeResizeThumb DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                                    <customControls:NodeResizeThumb.Template>
                                                        <ControlTemplate>
                                                            <Border
                                                                Background="Gray"
                                                                BorderBrush="LightGray"
                                                                BorderThickness="0.5"
                                                                CornerRadius="5"
                                                                Cursor="SizeNWSE" />
                                                        </ControlTemplate>
                                                    </customControls:NodeResizeThumb.Template>
                                                </customControls:NodeResizeThumb>
                                            </Border>

                                            <ItemsControl
                                                Grid.Row="0"
                                                Grid.RowSpan="2"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                ItemContainerStyle="{StaticResource TerminalContainerStyle}"
                                                ItemsPanel="{StaticResource CanvasItemsPanelTemplate}"
                                                ItemsSource="{Binding TerminalViewModels}" />

                                            <Rectangle
                                                Grid.Row="0"
                                                Grid.RowSpan="2"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                Style="{StaticResource SelectionStyle}"
                                                Visibility="{Binding IsSelected, Converter={StaticResource Btv}}" />

                                            <Border
                                                Grid.Row="0"
                                                Grid.RowSpan="2"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                HorizontalAlignment="Stretch"
                                                Style="{StaticResource NodeBorderStyle}">
                                                <ContentControl
                                                    HorizontalContentAlignment="Stretch"
                                                    VerticalContentAlignment="Stretch"
                                                    s:View.Model="{Binding}"
                                                    IsTabStop="False" />
                                            </Border>

                                            <Button
                                                Grid.Row="0"
                                                Grid.Column="1"
                                                Margin="1,0,0,1"
                                                Command="{s:Action RemoveNodePressed}"
                                                Style="{StaticResource DeleteNodeButtonStyle}"
                                                Visibility="{Binding IsSelected, Converter={StaticResource Btv}}" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Grid>
        </customControls:ZoomBorder>

        <ContentControl
            Margin="2"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            s:View.Model="{Binding DiagramControlViewModel}" />

        <ContentControl s:View.Model="{Binding NodeSelectorViewModel}" Visibility="{Binding NodeSelectorViewModel.Visible, Converter={StaticResource Btv}}" />

        <Border Background="#BBFFFFFF" Visibility="{Binding IsDraggingDiagramCallNode, Converter={StaticResource Btv}}">
            <Grid
                Width="300"
                Height="100"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsHitTestVisible="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="57*" />
                    <RowDefinition Height="43*" />
                </Grid.RowDefinitions>
                <Polygon
                    Grid.Row="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="Green"
                    Points="20 0,25 0, 25 20, 45, 20, 45 25, 25 25, 25 45, 20 45, 20 25, 0 25, 0 25, 0, 20, 20 20" />
                <Label
                    Grid.Row="1"
                    HorizontalContentAlignment="Center"
                    Content="{Binding DropDiagramCallText}"
                    FontSize="18" />
            </Grid>
        </Border>
    </Grid>
</UserControl>